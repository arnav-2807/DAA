#include <stdio.h>
#include <limits.h>

#define V 5

int minDist(int dist[], int visited[]) {
    int min = INT_MAX, idx = -1;
    for (int i = 0; i < V; i++)
        if (!visited[i] && dist[i] < min)
            min = dist[i], idx = i;
    return idx;
}

void dijkstra(int graph[V][V], int src) {
    int dist[V], visited[V] = {0};
    for (int i = 0; i < V; i++) dist[i] = INT_MAX;
    dist[src] = 0;

    for (int i = 0; i < V - 1; i++) {
        int u = minDist(dist, visited);
        visited[u] = 1;
        for (int v = 0; v < V; v++)
            if (graph[u][v] && !visited[v] && dist[u] + graph[u][v] < dist[v])
                dist[v] = dist[u] + graph[u][v];
    }

    for (int i = 0; i < V; i++)
        printf("Distance from %d to %d: %d\n", src, i, dist[i]);
}

int main() {
    int graph[V][V] = {
        {0, 10, 0, 5, 0},
        {0, 0, 1, 2, 0},
        {0, 0, 0, 0, 4},
        {0, 3, 9, 0, 2},
        {7, 0, 6, 0, 0}
    };
    dijkstra(graph, 0);
    return 0;
}
